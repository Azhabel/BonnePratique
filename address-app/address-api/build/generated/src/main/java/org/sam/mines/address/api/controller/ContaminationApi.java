/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.sam.mines.address.api.controller;

import org.sam.mines.address.api.model.Contamination;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-04-20T12:17:40.149924878+02:00[Europe/Paris]")
@Validated
@Api(value = "contamination", description = "the contamination API")
public interface ContaminationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /contamination : List all contaminations
     *
     * @return An array of contaminations (status code 200)
     */

    @ApiOperation(value = "List all contaminations", nickname = "getAllContamination", notes = "", response = Contamination.class, responseContainer = "List", tags={ "contamination", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "An array of contaminations", response = Contamination.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/contamination",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Contamination>> getAllContamination() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"disease\" : \"disease\", \"address\" : [ { \"number\" : \"\", \"town\" : { \"name\" : \"name\", \"postCode\" : \"\", \"id\" : \"\" }, \"street\" : \"street\", \"id\" : \"\" }, { \"number\" : \"\", \"town\" : { \"name\" : \"name\", \"postCode\" : \"\", \"id\" : \"\" }, \"street\" : \"street\", \"id\" : \"\" } ], \"person\" : [ { \"firstname\" : \"firstname\", \"name\" : \"name\", \"id\" : \"\" }, { \"firstname\" : \"firstname\", \"name\" : \"name\", \"id\" : \"\" } ], \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /contamination/{id} : Info for a specific contamination
     *
     * @param id The id of the contamination to retrieve (required)
     * @return Expected response to a valid request (status code 200)
     */

    @ApiOperation(value = "Info for a specific contamination", nickname = "getContaminationById", notes = "", response = Contamination.class, tags={ "contamination", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "Expected response to a valid request", response = Contamination.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/contamination/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Contamination> getContaminationById(@ApiParam(value = "The id of the contamination to retrieve", required = true) @PathVariable("id") String id

) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"disease\" : \"disease\", \"address\" : [ { \"number\" : \"\", \"town\" : { \"name\" : \"name\", \"postCode\" : \"\", \"id\" : \"\" }, \"street\" : \"street\", \"id\" : \"\" }, { \"number\" : \"\", \"town\" : { \"name\" : \"name\", \"postCode\" : \"\", \"id\" : \"\" }, \"street\" : \"street\", \"id\" : \"\" } ], \"person\" : [ { \"firstname\" : \"firstname\", \"name\" : \"name\", \"id\" : \"\" }, { \"firstname\" : \"firstname\", \"name\" : \"name\", \"id\" : \"\" } ], \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
